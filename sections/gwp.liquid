<div id="shopify-section-gwp" class="shopify-section">

<script defer="" src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.9.2/dist/confetti.browser.min.js"></script>

<div class="gwp-overlay" id="gwp-overlay" style="display: block;"></div>
<div class="gwp-popup" id="gwp-popup" style="display: block;">
<span class="gwp-popup-close" onclick="closePopup()">âœ•</span>
<span class="gwp-title"><p>ðŸŽ‰ Congratulations! You unlocked a free gift.</p></span>
  
<img loading="lazy" class="gwp-gift-img" src="//shopioso-codes.myshopify.com/cdn/shop/files/snowboard_wax_small.png?v=1720685035" alt="Selling Plans Ski Wax">


<p class="gwp-pt">Selling Plans Ski Wax</p>
<span class="gwp-price"><p class="gwp-pr gwp-strike gwp-price">$9.95</p><p class="gwp-pr gwp-free">Free</p></span>


 <form class="GWPform" method="post" action="/cart/add">
 
 <input name="id" value="45246212505738" type="hidden">
 
 <input id="submitbutton" onclick="confetti({zIndex:99999});this.disabled = true; this.form.submit();" class="gwp-button" name="add" value="REEDEM FREE GIFT" type="submit">
</form>
</div>

<style>
/* Styles for overlay */
    .gwp-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 9999;
    }

    /* Styles for popup */
    .gwp-popup {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        z-index: 10000;
      min-width: 225px;
    }

    /* Style for close button */
    .gwp-popup-close {
        position: absolute;
        top: 5px;
        right: 10px;
        cursor: pointer;
    }

    input.gwp-button {
      display: block;
      margin: 0 auto;
      font-size: 15px;
      cursor: pointer;
      background-color: #000000;
      color: #ffffff;
      padding: 7px 17px;
      border: 1px solid #000000;
      transition: all .2s ease-out;
      border-radius: 3px;
  }

      input.gwp-button:hover {
          color: #000000;
          background-color: #ffffff;
          border: 1px solid #000000;
      }

   .gwp-title p {
    text-align: center;
    line-height: 1.2;
    color: black;
    font-size: 16px;
  }
 
 @media only screen and (max-width: 600px) {
     .gwp-title p {
   font-size: 14px;
  }
 }
 
img.gwp-gift-img {
  width: 81px;
  height: auto;
  display: block;
  margin: 0 auto;
}
p.gwp-pt {
  display: block;
  margin: 0 auto;
  text-align: center;
  text-transform: uppercase;
  color: black;
  padding-top:8px;
  line-height: 1.3;
}
  p.gwp-pr {
  display: block;
  text-transform: uppercase;
  color: black;
  margin:0;
}
.gwp-strike {
  padding-top:0px!important;
  text-decoration: line-through;
}
span.gwp-price {
  display: flex;
  align-items: baseline;
  justify-content: center;
  column-gap: 10px;
  margin-bottom:5px;
}
.gwp-free {
 font-weight:600;
}
 .GWPform {
   text-align:center;
 }
 label.variantL {
   display: block;
}
 .variantS {
   width: 100%;
   max-width: 185px;
   height: 28px;
   margin-bottom: 6px;
}
  </style>

<script> 
// Function to fetch the cart data from Shopify
function fetchCartData(callback) {
  fetch('/cart.js')
      .then(response => response.json())
      .then(data => {
          callback(data);
      })
      .catch(error => console.error('Error fetching cart data:', error));
}

// Function to check if any product in the cart has a final line price of 0
function hasZeroPriceProduct(cartData) {
  return cartData.items.some(item => item.final_line_price === 0);
}

// Function to calculate the total value of items in the cart
function calculateCartValue(cartData) {
  let totalValue = 0;
  cartData.items.forEach(item => {
      totalValue += item.price * item.quantity;
  });
  return totalValue.toFixed(2);
}

// Function to show the popup with cart value
function showPopup(cartValue) {
  const overlay = document.getElementById('gwp-overlay');
  const popup = document.getElementById('gwp-popup');
  overlay.style.display = 'block';
  popup.style.display = 'block';
}

// Function to close the popup
function closePopup() {
  const overlay = document.getElementById('gwp-overlay');
  const popup = document.getElementById('gwp-popup');
  overlay.style.display = 'none';
  popup.style.display = 'none';
  sessionStorage.setItem('popupShown', 'true'); // Update sessionStorage
}

// Function to check the cart value and show popup if necessary
function checkCartValue() {
  fetchCartData(cartData => {
      console.log('Cart Data:', cartData);
      const cartValue = calculateCartValue(cartData);
      console.log('Cart Value:', cartValue);
      const hasZeroPrice = hasZeroPriceProduct(cartData);
      console.log('Has Zero Price Product:', hasZeroPrice);

      const popupShown = sessionStorage.getItem('popupShown') === 'true'; // Check sessionStorage for popup state

      if (parseFloat(cartValue) >= 50000 && !popupShown && !hasZeroPrice) {
          showPopup(cartValue);
          sessionStorage.setItem('popupShown', 'true'); // Update sessionStorage
      } else if (parseFloat(cartValue) < 50000 || popupShown || hasZeroPrice) {
         // closePopup();
      }
  });
}

// Listen for user interactions
document.addEventListener('click', handleUserInteraction);
document.addEventListener('keypress', handleUserInteraction);

// Function to handle user interactions
function handleUserInteraction() {
  // Check cart value after 2.5 seconds
  setTimeout(checkCartValue, 2500);
}

// Initial check on page load
checkCartValue();
</script> 
</div>